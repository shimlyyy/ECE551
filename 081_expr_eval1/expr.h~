#ifndef __EXPR_H__
#define __EXPR_H__

#include <cstdlib>
#include <sstream>
#include <string>
class Expression
{
  /* protected:
  long num1;
  long num2;
  long num;
  */
 public:
  // Expression(long i) : num1(0), num2(0), num(i) {}
  // Expression(Expression * i, Expression * j) : num1(i->num), num2(j->num) {}
  virtual std::string toString() const = 0;
  virtual ~Expression() {}
};

class NumExpression : public Expression
{
 private:
  num;

 public:
  NumExpression(long i) : num(i) {}
  virtual std::string toString() const {
    std::stringstream ss;
    std::string res;
    ss << num;
    ss >> res;
    return res;
  }

  virtual ~NumExpression() {}
};

class PlusExpression : public Expression
{
 public:
  PlusExpression(Expression * lhs, Expression * rhs) : Expression(lhs, rhs) {}
  std::string toString() const {
    std::ostringstream ss;
    std::string res;
    ss << "(" << num1 << " + " << num2 << ")";
    res = ss.str();
    return res;
  }
};
#endif
